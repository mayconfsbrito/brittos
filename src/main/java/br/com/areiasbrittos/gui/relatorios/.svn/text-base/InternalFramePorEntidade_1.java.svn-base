/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InternalFrameClientes.java
 *
 * Created on 17/01/2011, 18:27:01
 */
package gui.relatorios;

import gui.utils.MascarasJTextField;
import gui.utils.ApagaElementosDaInterface;
import persistencia.dao.DAOEntidade;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import persistencia.ConnectionFactory;
import utils.ReportUtils;

/**
 *
 * @author Maycon
 */
public class InternalFramePorEntidade extends gui.superclass.InternalFrame {

    private String[] botoesOpcoes = {"Sim", "Não"};
    ApagaElementosDaInterface apaga = new ApagaElementosDaInterface();

    /** Creates new form InternalFrameClientes */
    public InternalFramePorEntidade() {
        initComponents();
        setVisible(true);
        inicializa();
    }

    /**Inicializa as opções personalizadas para esta GUI**/
    @Override
    public void inicializa() {
        textMensagem.setText("Defina as opções para gerar o relatório.");
        comboEntidade.setModel(new DAOEntidade().inicializaComboBox("Todos", "Todos"));

        /**Inicializa os botões**/
        radioTodoPeriodo.setSelected(true);
        radioTodos.setSelected(true);
        checkPesagem.setSelected(true);
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupPeriodo = new javax.swing.ButtonGroup();
        groupEntidade = new javax.swing.ButtonGroup();
        groupPagamento = new javax.swing.ButtonGroup();
        groupConclusao = new javax.swing.ButtonGroup();
        panelBotoes = new javax.swing.JPanel();
        buttonCancelar = new javax.swing.JButton();
        buttonLimpar = new javax.swing.JButton();
        buttonImprimir = new javax.swing.JButton();
        panelDefinicoes = new javax.swing.JPanel();
        labelTransacao = new javax.swing.JLabel();
        labelTipoEntidade = new javax.swing.JLabel();
        radioTodos = new javax.swing.JRadioButton();
        radioCliente = new javax.swing.JRadioButton();
        radioFornecedor = new javax.swing.JRadioButton();
        labelEntidade = new javax.swing.JLabel();
        comboEntidade = new javax.swing.JComboBox();
        checkPesagem = new javax.swing.JCheckBox();
        radioClienteFornecedor = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        radioPagamentoTodos = new javax.swing.JRadioButton();
        radioPagamentoAvista = new javax.swing.JRadioButton();
        radioPagamentoAprazo = new javax.swing.JRadioButton();
        radioConclusaoTodas = new javax.swing.JRadioButton();
        radioConclusaoConcluidas = new javax.swing.JRadioButton();
        radioConclusaoNaoConcluidas = new javax.swing.JRadioButton();
        panelMensagem = new javax.swing.JPanel();
        textMensagem = new javax.swing.JTextField();
        panelPeriodo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        radioTodoPeriodo = new javax.swing.JRadioButton();
        radioDurantePeriodo = new javax.swing.JRadioButton();
        textPeriodoInicial = new javax.swing.JFormattedTextField(new MascarasJTextField().inserirMascara("##/##/##"));
        ((JFormattedTextField)textPeriodoInicial).setFocusLostBehavior(JFormattedTextField.COMMIT);
        jLabel2 = new javax.swing.JLabel();
        textPeriodoFinal = new javax.swing.JFormattedTextField(new MascarasJTextField().inserirMascara("##/##/##"));
        ((JFormattedTextField)textPeriodoFinal).setFocusLostBehavior(JFormattedTextField.COMMIT);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Relatório Por Entidade");
        setToolTipText("");

        panelBotoes.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opções", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        buttonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/Cancelar.png"))); // NOI18N
        buttonCancelar.setText("Cancelar");
        buttonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarActionPerformed(evt);
            }
        });

        buttonLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/Novo.png"))); // NOI18N
        buttonLimpar.setText("Limpar");
        buttonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimparActionPerformed(evt);
            }
        });

        buttonImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/Imprimir (2).png"))); // NOI18N
        buttonImprimir.setText("Imprimir");
        buttonImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBotoesLayout = new javax.swing.GroupLayout(panelBotoes);
        panelBotoes.setLayout(panelBotoesLayout);
        panelBotoesLayout.setHorizontalGroup(
            panelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotoesLayout.createSequentialGroup()
                .addComponent(buttonImprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonLimpar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCancelar)
                .addContainerGap(190, Short.MAX_VALUE))
        );
        panelBotoesLayout.setVerticalGroup(
            panelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotoesLayout.createSequentialGroup()
                .addGroup(panelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonImprimir)
                    .addComponent(buttonLimpar)
                    .addComponent(buttonCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelDefinicoes.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Definições", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        labelTransacao.setText("Tipo de transação:");

        labelTipoEntidade.setText("Tipos de entidade:");

        groupEntidade.add(radioTodos);
        radioTodos.setText("Todos");
        radioTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioTodosActionPerformed(evt);
            }
        });

        groupEntidade.add(radioCliente);
        radioCliente.setText("Apenas Cliente");
        radioCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioClienteActionPerformed(evt);
            }
        });

        groupEntidade.add(radioFornecedor);
        radioFornecedor.setText("Apenas Fornecedor");
        radioFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFornecedorActionPerformed(evt);
            }
        });

        labelEntidade.setText("Entidade:");

        checkPesagem.setText("Pesagem");

        groupEntidade.add(radioClienteFornecedor);
        radioClienteFornecedor.setText("Cliente e Fornecedor");
        radioClienteFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioClienteFornecedorActionPerformed(evt);
            }
        });

        jLabel3.setText("Que estejam:");

        jLabel4.setText("Foma de pagamento:");

        groupPagamento.add(radioPagamentoTodos);
        radioPagamentoTodos.setSelected(true);
        radioPagamentoTodos.setText("Todos");

        groupPagamento.add(radioPagamentoAvista);
        radioPagamentoAvista.setText("Apenas a vista");

        groupPagamento.add(radioPagamentoAprazo);
        radioPagamentoAprazo.setText("Apenas a prazo");

        groupConclusao.add(radioConclusaoTodas);
        radioConclusaoTodas.setSelected(true);
        radioConclusaoTodas.setText("Todas");

        groupConclusao.add(radioConclusaoConcluidas);
        radioConclusaoConcluidas.setText("Apenas Concluidas");

        groupConclusao.add(radioConclusaoNaoConcluidas);
        radioConclusaoNaoConcluidas.setText("Apenas Não Concluídas");

        javax.swing.GroupLayout panelDefinicoesLayout = new javax.swing.GroupLayout(panelDefinicoes);
        panelDefinicoes.setLayout(panelDefinicoesLayout);
        panelDefinicoesLayout.setHorizontalGroup(
            panelDefinicoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDefinicoesLayout.createSequentialGroup()
                .addGroup(panelDefinicoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTransacao)
                    .addComponent(checkPesagem)
                    .addComponent(labelTipoEntidade)
                    .addGroup(panelDefinicoesLayout.createSequentialGroup()
                        .addComponent(radioTodos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioFornecedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioClienteFornecedor))
                    .addComponent(labelEntidade)
                    .addComponent(comboEntidade, 0, 485, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addGroup(panelDefinicoesLayout.createSequentialGroup()
                        .addComponent(radioPagamentoTodos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioPagamentoAvista)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioPagamentoAprazo))
                    .addGroup(panelDefinicoesLayout.createSequentialGroup()
                        .addComponent(radioConclusaoTodas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioConclusaoConcluidas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioConclusaoNaoConcluidas)))
                .addContainerGap())
        );
        panelDefinicoesLayout.setVerticalGroup(
            panelDefinicoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDefinicoesLayout.createSequentialGroup()
                .addComponent(labelTransacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkPesagem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelTipoEntidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDefinicoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioTodos)
                    .addComponent(radioCliente)
                    .addComponent(radioFornecedor)
                    .addComponent(radioClienteFornecedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelEntidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDefinicoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioConclusaoTodas)
                    .addComponent(radioConclusaoConcluidas)
                    .addComponent(radioConclusaoNaoConcluidas))
                .addGap(7, 7, 7)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelDefinicoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioPagamentoTodos)
                    .addComponent(radioPagamentoAvista)
                    .addComponent(radioPagamentoAprazo)))
        );

        panelMensagem.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        textMensagem.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        textMensagem.setBorder(null);

        javax.swing.GroupLayout panelMensagemLayout = new javax.swing.GroupLayout(panelMensagem);
        panelMensagem.setLayout(panelMensagemLayout);
        panelMensagemLayout.setHorizontalGroup(
            panelMensagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
        );
        panelMensagemLayout.setVerticalGroup(
            panelMensagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMensagemLayout.createSequentialGroup()
                .addComponent(textMensagem)
                .addContainerGap())
        );

        panelPeriodo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Período", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel1.setText("De:");

        groupPeriodo.add(radioTodoPeriodo);
        radioTodoPeriodo.setText("Todas as ocorrências");
        radioTodoPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioTodoPeriodoActionPerformed(evt);
            }
        });

        groupPeriodo.add(radioDurantePeriodo);
        radioDurantePeriodo.setText("Durante:");
        radioDurantePeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDurantePeriodoActionPerformed(evt);
            }
        });

        ((JFormattedTextField)textPeriodoInicial).setHorizontalAlignment(textPeriodoInicial.LEFT);
        textPeriodoInicial.setEnabled(false);

        jLabel2.setText("Até:");

        ((JFormattedTextField)textPeriodoFinal).setHorizontalAlignment(textPeriodoFinal.LEFT);
        textPeriodoFinal.setEnabled(false);

        javax.swing.GroupLayout panelPeriodoLayout = new javax.swing.GroupLayout(panelPeriodo);
        panelPeriodo.setLayout(panelPeriodoLayout);
        panelPeriodoLayout.setHorizontalGroup(
            panelPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPeriodoLayout.createSequentialGroup()
                .addGroup(panelPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPeriodoLayout.createSequentialGroup()
                        .addComponent(radioTodoPeriodo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioDurantePeriodo))
                    .addGroup(panelPeriodoLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textPeriodoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textPeriodoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(299, Short.MAX_VALUE))
        );
        panelPeriodoLayout.setVerticalGroup(
            panelPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPeriodoLayout.createSequentialGroup()
                .addGroup(panelPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioTodoPeriodo)
                    .addComponent(radioDurantePeriodo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textPeriodoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(textPeriodoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelDefinicoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelPeriodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelMensagem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelDefinicoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected void buttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarActionPerformed
        int opcao = JOptionPane.showOptionDialog(null, "Tem certeza que deseja cancelar a operação?", "Cancelar",
                JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, botoesOpcoes, botoesOpcoes[0]);
        if (opcao == JOptionPane.YES_OPTION) {
            this.dispose();
        }
}//GEN-LAST:event_buttonCancelarActionPerformed

    /**
     * Limpa as opções da gui
     * @param evt 
     */
    @Override
    protected void buttonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimparActionPerformed
        int opcao = JOptionPane.showOptionDialog(null, "Tem certeza que deseja limpar estes campos?", "Limpar",
                JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, botoesOpcoes, botoesOpcoes[0]);

        if (opcao == JOptionPane.YES_OPTION) {
            comboEntidade.setSelectedIndex(0);
            apaga.apagaJTextField(textPeriodoFinal, textPeriodoInicial);
            checkPesagem.setSelected(true);
            radioTodos.setSelected(true);
            radioConclusaoTodas.setSelected(true);
            radioPagamentoTodos.setSelected(true);
            radioTodoPeriodoActionPerformed(evt);
        }
    }//GEN-LAST:event_buttonLimparActionPerformed

    /**
     * Filtra as opções escolhida e executa o relatório
     * @param evt 
     */
    private void buttonImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonImprimirActionPerformed

        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yy");
        boolean imprime = true;

        /**Verifica se as opções mínimas para impressão do relatório estão marcardas**/
        if (checkPesagem.isSelected()) {

                try {
                    InputStream inputStream = getClass().getResourceAsStream("/PorEntidade.jasper");
                    Map parametros = new HashMap();

                    FileInputStream imagem = new FileInputStream("Logo.png");
                    parametros.put("imagem", imagem);

                    /** Define parâmetros de período*/
                    if (radioTodoPeriodo.isSelected()) {
                        parametros.put("periodo", "Todos");

                    } else {

                        Date periodoInicial = new Date(format.parse(textPeriodoInicial.getText()).getTime());
                        Date periodoFinal = new Date(format.parse(textPeriodoFinal.getText()).getTime());

                        if (!periodoFinal.before(periodoInicial)) {
                            parametros.put("periodoInicial", periodoInicial);
                            parametros.put("periodoFinal", periodoFinal);
                            parametros.put("periodo", periodoInicial.toString() + " a " + periodoFinal.toString());

                        } else {
                            JOptionPane.showMessageDialog(null, "A data inicial não pode ser maior do que a data final do período definido.",
                                    "Atenção", JOptionPane.WARNING_MESSAGE);
                            imprime = false;
                        }
                    }

                    /** Define parâmetro tipo de entidade*/
                    if (radioClienteFornecedor.isSelected()) {
                        parametros.put("tipo", "Cliente e Fornecedor");

                    } else if (radioCliente.isSelected()) {
                        parametros.put("tipo", "Cliente");

                    } else if (radioFornecedor.isSelected()) {
                        parametros.put("tipo", "Fornecedor");

                    } else if (radioTodos.isSelected()) {
                        parametros.put("tipo", "Todos");

                    }

                    /**Define o parâmetro do nome da entidade**/
                    parametros.put("nomeEntidade", comboEntidade.getSelectedItem().toString());

                    /**Define o parâmetro de conclusão das transações**/
                    if (radioConclusaoTodas.isSelected()) {
                        parametros.put("concluida", "Todos");

                    } else if (radioConclusaoConcluidas.isSelected()) {
                        parametros.put("concluida", "Concluídas");

                    } else if (radioConclusaoNaoConcluidas.isSelected()) {
                        parametros.put("concluida", "Não Concluídas");

                    }

                    /*Define o parâmetro de forma de pagamento*/
                    if (radioPagamentoTodos.isSelected()) {
                        parametros.put("pagamento", "Todos");

                    } else if (radioPagamentoAvista.isSelected()) {
                        parametros.put("pagamento", "A vista");

                    } else if (radioPagamentoAprazo.isSelected()) {
                        parametros.put("pagamento", "A prazo");
                    
                    }

                    /**Executa o relatório**/
                    if (imprime) {
                        ReportUtils.openReport("Relatório por Entidade", inputStream, parametros, ConnectionFactory.getConnectionBrittos());
                    }

                } catch (ParseException er) {

                    JOptionPane.showMessageDialog(null, "Preenchimento incorreto das datas de periodo inicial ou periodo final.\n"
                            + "Favor preencher corretamente ou selecionar \"todas as ocorrências\".",
                            "Atenção", JOptionPane.WARNING_MESSAGE);

                } catch (Exception er) {

                    JOptionPane.showMessageDialog(null, "Erro ao criar o relatório.\n" + er, "Erro", JOptionPane.ERROR_MESSAGE);

                }

            
        } else {
            JOptionPane.showMessageDialog(null, "Selecione o tipo de transação que você deseja imprimir o relatório.\n",
                    "Atenção", JOptionPane.WARNING_MESSAGE);
        }
}//GEN-LAST:event_buttonImprimirActionPerformed

    private void radioTodoPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioTodoPeriodoActionPerformed
        radioTodoPeriodo.setSelected(true);
        textPeriodoInicial.setEnabled(false);
        textPeriodoFinal.setEnabled(false);
        apaga.apagaJTextField(textPeriodoFinal, textPeriodoInicial);
    }//GEN-LAST:event_radioTodoPeriodoActionPerformed

    private void radioDurantePeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDurantePeriodoActionPerformed
        textPeriodoInicial.setEnabled(true);
        textPeriodoFinal.setEnabled(true);
        apaga.apagaJTextField(textPeriodoFinal, textPeriodoInicial);
    }//GEN-LAST:event_radioDurantePeriodoActionPerformed

    private void radioTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioTodosActionPerformed
        comboEntidade.setModel(new DAOEntidade().inicializaComboBox("Todos", "Todos"));
    }//GEN-LAST:event_radioTodosActionPerformed

    private void radioClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioClienteActionPerformed
        comboEntidade.setModel(new DAOEntidade().inicializaComboBox("Todos", "Cliente"));
    }//GEN-LAST:event_radioClienteActionPerformed

    private void radioFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFornecedorActionPerformed
        comboEntidade.setModel(new DAOEntidade().inicializaComboBox("Todos", "Fornecedor"));
    }//GEN-LAST:event_radioFornecedorActionPerformed

    private void radioClienteFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioClienteFornecedorActionPerformed
        comboEntidade.setModel(new DAOEntidade().inicializaComboBox("Todos", "Cliente e Fornecedor"));
    }//GEN-LAST:event_radioClienteFornecedorActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancelar;
    private javax.swing.JButton buttonImprimir;
    private javax.swing.JButton buttonLimpar;
    private javax.swing.JCheckBox checkPesagem;
    private javax.swing.JComboBox comboEntidade;
    private javax.swing.ButtonGroup groupConclusao;
    private javax.swing.ButtonGroup groupEntidade;
    private javax.swing.ButtonGroup groupPagamento;
    private javax.swing.ButtonGroup groupPeriodo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel labelEntidade;
    private javax.swing.JLabel labelTipoEntidade;
    private javax.swing.JLabel labelTransacao;
    private javax.swing.JPanel panelBotoes;
    private javax.swing.JPanel panelDefinicoes;
    private javax.swing.JPanel panelMensagem;
    private javax.swing.JPanel panelPeriodo;
    private javax.swing.JRadioButton radioCliente;
    private javax.swing.JRadioButton radioClienteFornecedor;
    private javax.swing.JRadioButton radioConclusaoConcluidas;
    private javax.swing.JRadioButton radioConclusaoNaoConcluidas;
    private javax.swing.JRadioButton radioConclusaoTodas;
    private javax.swing.JRadioButton radioDurantePeriodo;
    private javax.swing.JRadioButton radioFornecedor;
    private javax.swing.JRadioButton radioPagamentoAprazo;
    private javax.swing.JRadioButton radioPagamentoAvista;
    private javax.swing.JRadioButton radioPagamentoTodos;
    private javax.swing.JRadioButton radioTodoPeriodo;
    private javax.swing.JRadioButton radioTodos;
    private javax.swing.JTextField textMensagem;
    private javax.swing.JTextField textPeriodoFinal;
    private javax.swing.JTextField textPeriodoInicial;
    // End of variables declaration//GEN-END:variables
}
